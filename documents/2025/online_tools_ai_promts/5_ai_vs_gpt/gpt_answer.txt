Q: I have a huge c++ codebase. I need a tool to visualize the include dependencies.
GPT: 
To visualize include dependencies in a large C++ codebase, there are several tools designed for exactly this purpose. Here are the most reliable and commonly used tools:
✅ **2. **CIncludeGraph
Simple and focused on visualization.
Parses C/C++ files and generates a .dot file for Graphviz showing the include graph.
Ideal for:
High-level overview.
Spotting circular dependencies.
✅ 3. Doxygen + Graphviz
Best for comprehensive documentation + visualizations.
Doxygen is a widely used tool for generating documentation from annotated C++ source code. You can add special comment blocks (using /// or /** */) to provide structured documentation. Example: 

/**
 * Calculates the sum of two integers.
 * @param a First integer
 * @param b Second integer
 * @return Sum of a and b
 */
int add(int a, int b) {
    return a + b;
}

When used with Graphviz, Doxygen can generate include dependency graphs:
For files (#include)
For classes (inheritance and usage)
Config to enable:
✅ **4. **IncludeGraph
Generates visual include graphs directly.
Outputs .dot files or SVGs.
Easier to use for just graph generation vs full documentation tools like Doxygen.
✅ 5. [clang-tools (clangd-indexer)]
While more advanced and deeper in Clang tooling, you can extract include data from the AST and generate custom visualizations.
Requires a Clang compilation database (compile_commands.json).
How to Use with Graphviz
Most of these tools output .dot files. You can visualize them like so:
dot -Tsvg includes.dot -o includes.svg
Or use xdot for interactive graph exploration:
xdot includes.dot
Recommendation
For a huge codebase, the best combo is:
Doxygen + Graphviz: If you also want detailed documentation.
CIncludeGraph or IncludeGraph: If you just want a lightweight, visual overview of dependencies.
Let me know your build system (e.g., CMake, Make) or if you use Clang tooling — I can tailor the steps more closely.
HAVE_DOT = YES
INCLUDE_GRAPH = YES
INCLUDE_GRAPH_MAX_DEPTH = 5
